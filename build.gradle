buildscript {
	ext {
		springBootVersion	= "2.0.5.RELEASE"
		gradleDockerVersion	= "1.2"
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("se.transmode.gradle:gradle-docker:${gradleDockerVersion}")
	}
}

apply plugin: "java"
apply plugin: "application"
apply plugin: "eclipse"
apply plugin: "docker"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

compileJava {
	sourceCompatibility	= 1.8
	targetCompatibility = 1.8
	mainClassName		= "de.probstl.docker.MicroApp"
}

jar {
	baseName	= "microservice"
	group		= "de.probstl"
	version		= "1.0.0-SNAPSHOT"
	manifest {
		attributes "Main-Class": "de.probstl.docker.MicroApp"
	}
}

/*

Docker Image bauen lassen:
gradle build distDocker --refresh-dependencies

Docker Image prüfen:
docker images

Docker Container hochfahren:
docker run --name docker-mini-container -p 8080:8080 -d docker-mini

Docker Logs für den Container anzeigen
docker logs docker-mini-container

Shell im Container öffnen
docker exec -it docker-mini-container /bin/sh

*/

docker {
	baseImage "openjdk:8u181-alpine"
	maintainer 'Florian Probst "flo@probstl.de"'
}

repositories {
	mavenCentral()
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web")
	testCompile("org.springframework.boot:spring-boot-starter-test")
}
